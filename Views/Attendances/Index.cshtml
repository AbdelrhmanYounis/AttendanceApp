@model IEnumerable<AttendanceApp.Models.Attendance>
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string StartHour = "",EndHour="",Day="",LastUpdate="",WorkHour="";
    var user = UserManager.GetUserAsync(User).Result;
    string roleName =(user!=null)? UserManager.GetRolesAsync(user).Result.FirstOrDefault():"";
}
<!-- Latest compiled and minified CSS -->
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
<link href="~/lib/bootstrap/dist/css/bootstrap.css" rel="stylesheet" />

<link href="https://cdn.datatables.net/1.10.15/css/dataTables.bootstrap.min.css" rel="stylesheet" />
<link href="https://cdn.datatables.net/responsive/2.1.1/css/responsive.bootstrap.min.css" rel="stylesheet" />

<script src="https://cdn.datatables.net/1.10.15/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/1.10.15/js/dataTables.bootstrap4.min.js "></script>

    <a asp-action="Create" class="link px-4">Create New <i data-feather="plus-circle"></i></a>
    @if (roleName.Equals("Admin"))
            {
    <a asp-action="ExportExcel" class="link px-4">Get Excel <i data-feather="arrow-down-circle"></i></a>
            }
            
<partial name="_ValidationScriptsPartial" />  
<script>  
  
    $(document).ready(function () {  
        $('#table').DataTable({  
            dom: 'Bfrtip',  
            buttons: [  
                'copy', 'csv',  'print'  
            ]  
        });  
    });  
  
</script>  
<table class="table table-striped table-bordered" style="width:100%;" id="table">  
    <thead>
        <tr>
            @if (roleName.Equals("Admin"))
            {
            <th>
                @Html.DisplayName("Picture")
            </th>
            <th>
                @Html.DisplayName("Name")
            </th>
            }
            <th>
                @Html.DisplayName("Day")
            </th>
            <th>
                @Html.DisplayName("Last Update")
            </th>
            <th>
                @Html.DisplayName("Location")
            </th>
            <th>
                @Html.DisplayName("Checked In")
            </th>
             
            <th>
                @Html.DisplayName("Checked Out")
            </th>
           
            <th>
                @Html.DisplayName("Timer")
            </th>
            <th>
                @Html.DisplayName("Comment")
            </th>
            <th></th>
            <th></th>
        </tr>
    </thead>
    <tbody>  
        @foreach (var item in Model)  
        {  
             <tr>
                @if (roleName.Equals("Admin"))
                {
                    <td>
                       @if (item.Employee.ProfilePicture != null)
                           {            
                  <img class="rounded-circle" style="width:80px;height:80px" src="data:image/*;base64,
                                @(Convert.ToBase64String(item.Employee.ProfilePicture))" alt="">
                        }
                        else{
                            <img class="rounded-circle" src="~/Images/user.png" alt="" style="width:80px;height:80px">
                        }

                    </td>
                    <td style="text-align:center">
                        @Html.DisplayFor(modelItem => item.Employee.FirstName)
                    @Html.DisplayFor(modelItem => item.Employee.LastName)

                    </td>
                }
            <td>
                @Day @item.Day.ToString("dddd, dd MMMM yyyy")
                @Html.DisplayName(Day)
            </td>
            <td>
                        @LastUpdate @item.LastUpdate.ToString("dd MMMM yyyy hh:mm tt")
                        @Html.DisplayName(LastUpdate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.WorkFrom)
            </td>
            <td>
              @{
                        StartHour = $"{item.StartHour.Hours % 12}:{(item.StartHour.Minutes<10?"0":"")}{item.StartHour.Minutes} {(item.StartHour.Hours / 12 > 0 ? "PM" : "AM")}";

                        @Html.DisplayName(StartHour);
                }
            </td>
            <td>
                @if (item.EndHour != null)
                {
                    EndHour=$"{item.EndHour?.Hours%12}:{(item.EndHour?.Minutes<10?"0":"")}{item.EndHour?.Minutes} {(item.EndHour?.Hours/12>0?"PM":"AM")}";
                    @Html.DisplayName(EndHour);
                }
            </td>
            <td>
                @if (item.EndHour != null)
                {
                        WorkHour = (item.EndHour - item.StartHour)?.ToString("hh':'mm");
                        @Html.DisplayName(WorkHour);
                }            
                </td>
            <td>
                @Html.DisplayFor(modelItem => item.Comment)
            </td>
            
            <td>
                <a asp-action="Edit" asp-route-id="@item.AttendanceId" class="btn btn-info"><i data-feather="edit"></i></a> 
               </td>
                <td>
                <a asp-action="Delete" asp-route-id="@item.AttendanceId" class="btn btn-danger"><i data-feather="trash-2"></i></a>
            </td>
        </tr>  
        }  
    </tbody>  
</table>  

